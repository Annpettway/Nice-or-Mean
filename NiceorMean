




niceormean2.py2/ 3



















# Python: 2.7.3
#
# Author:  Glenda A. Najem / DeveloperNajem@Gmail.com 
#
# Purpose: Demonstrating how to pass variables from function to function
#          while producing a functional Game.
#
#
#          Remember, function_name(variable)_means that we pass in the variable.
#          return variable _means that we are returning the variable to
#          the calling function.
#
###Let the Game Begin.
def start(nice=0,mean=0,name=""):
    #get user's name.
    #starting out initialize with 0 in the invent the function is not providing 
info.
    #this will prevent the game from giving an error.
    name = describe_game(name)
    nice,mean,name = nice_mean(nice,mean,name)
def describe_game(name):
    """
       Check if this is a new game or not.
       If it is new, get the user's name.
       If it is not a new game, Thank the player for playing again and continue 
with the game.
    """
    if name != "": #This means if we do not already have this user's name, then 
they are a new player and we need to get thier name.
       print("\nThank you for playing again, {}!".format(name))
    else:
        stop = True
        while stop:
            if name == "":
                name = raw_input ("\nWhat is your name? ").capitalize()
                if name != "":
                    print("\nWelcome, {}!".format(name))
                    print("\nIn this game, you will be greeted by several 
different people.  \nYou can be nice or mean.")
                    print("At the end of the game your fate will be influenced 
from your actions.")
                    stop = False
    return name
def nice_mean(nice,mean,name):
    stop = True
    while stop:
        show_score(nice,mean,name)
        pick = raw_input("\nA stranger approaches you for a conversation.\nWill 
you be nice? n\m:").lower() #\n means to have output go down a line
        if pick == "n":
                print("They smile, wave, and walked away")
                nice = (nice + 1)
                stop = False
        if pick == "m":
            print("\nThe stranger observes you with a Threatening look and 






immediatley flee in the opposite direction...")
            mean = (mean + 1)
            stop = False
    score(nice,mean,name) #pass the 3 variables to the score()
        
def show_score(nice,mean,name):
    print("\n{}, you currently have ({}, Nice) and ({}, Mean) 
points.".format(name,nice,mean))
def score(nice,mean,name):
    #score function is being passed the values stored within the 3 variables
    if nice > 5: #if condition is valid, call win function passing in the 
variable so it can use them
        win(nice,mean,name)
    if mean > 5: #if condition is valid, call lose function passing in the 
variable so it can use them#
        lose(nice,mean,name)
    else:   #else, call nice_mean function passing in the variables so it can 
use them
        nice_mean(nice,mean,name)#this function will ask the questions over 
again.
def win(nice,mean,name):
    print("\nNice Job! {}, You Win!!! \nEveryone Loves a Winner and you now live
in a Beautiful home with a lovely Mate!".format(name))
    #substitute the {} wildcards with our variables
    again(nice,mean,name)#call again function and pass in our variable-best way 
to do this. Global variable nto recommended- where it defines a variable at the 
beginning
    #of the code, where everything has access to it, also clutters up the name 
space..."Bad Pratice".
def lose(nice,mean,name):
    print("n\Too Bad, Game Over! \n{}, You Think you're Lonely Now, Wait until 
Tonight!".format(name)) #substitute the {} wildcards with our variables.
    again(nice,mean,name) #call again functions and pass in our variables
def again(nice,mean,name):
    stop = True
    while stop:
        choice = raw_input("\nDo you want to Play again? y/n:").lower()
        if choice == "y":
            stop = False
            reset(nice,mean,name)
        if choice == "n":
            print("n\I understand Time is of the Essence!")
            stop = False
            exit()
        else:
         print("n\Please enter 'y' for 'YES', 'n' for 'NO'...")






def reset(nice,mean,name):
    nice = 0
    mean = 0
    #Notice, Name  variable not reset - same player
    start(nice,mean,name)
if __name__ == "__main__": 
    start()
                ##Glenda A. Najem / DeveloperNajem@Gmail.com
                           
                  
                
                  
            
           


